<div id="uploadArea">
  <input id="uploadFile" name="image" type="file" />
</div>

<div id="drawArea">

</div>
<div id="preview" style="width:250px;height:250px;overflow:hidden;margin-top:15px;">
  <% if user.picture_lg.present? %>
    <% if Rails.env == 'production' %>
      <%= image_tag ENV['AWS_PICTURE_PATH']+"#{ user.picture_lg }" %>
    <% else %>
      <%= image_tag "/docs/#{ user.picture_lg }" %>
    <% end -%>
  <% else %>
    <%= image_tag "no-picture-lg.gif" %>
  <% end %>
</div>

<div id="picture_edit_btn_area">
  <!-- <a id="getData" class="btn btn-primary" onClick="image_up()">画像切り抜き</a> -->
  <button class="btn btn-primary" data-dismiss="modal" onclick="image_up()">確定！</button>
</div>

<script>
  function up_open() {
    var upinput = document.getElementById("uploadFile");
    upinput.click();
  }

  $("#uploadFile").change(function() {
    //var canvas = $("#image");
    //var ctx = canvas[0].getContext("2d");

    // 選択されたファイルを取得
    var file = this.files[0];

    // 画像ファイル以外は処理中止
    if (!file.type.match(/^image\/(png|jpeg|gif)$/)) return;

    var image = new Image();
    var reader = new FileReader();

    // File APIを使用し、ローカルファイルを読み込む
    reader.onload = function(evt) {

      // 画像のURLをソースに設定
      image.src = evt.target.result;
      //画像をdivタグ内に描画
      var elem = document.getElementById("drawArea");
      elem.innerHTML =  '<img src="' + image.src + '" id="image">';
      $('#image').cropper({
        aspectRatio: 1 / 1,
        preview: "#preview",
      });
    }

    // ファイルを読み込み、データをBase64でエンコードされたデータURLにして返す
    reader.readAsDataURL(file);
  });


  function image_up(){
    var url = $('#image').cropper('getCroppedCanvas').toDataURL('image/jpeg');
    var formData = new FormData();

    ImgB64Resize(url, 250, 250, function(img_b64) {
      formData.append('croppedImage', img_b64);
      formData.append('size', "lg");

      $.ajax('/profile_pictures/upload_process', {
        method: "POST",
        data: formData,
        processData: false,
        contentType: false,
        success: function () {
          //console.log('Upload success');
        },
        error: function () {
          //console.log('Upload error');
        }
      });

      var elem = document.getElementById("user_edit_profile_picture");
      elem.innerHTML =  '<img src="' + img_b64 + '" style="border-radius:100%;">';
    });

    ImgB64Resize(url, 50, 50, function(img_b64) {
      formData.append('croppedImage', img_b64);
      formData.append('size', "min");

      $.ajax('/profile_pictures/upload_process', {
        method: "POST",
        data: formData,
        processData: false,
        contentType: false,
        success: function () {
          //console.log('Upload success');
        },
        error: function () {
          //console.log('Upload error');
        }
      });
    });
  }

  function ImgB64Resize(imgB64_src, width, height, callback) {
    var imgB64_dst;
    // Image Type
    var img_type = imgB64_src.substring(5, imgB64_src.indexOf(";"));
    // Source Image
    var img = new Image();
    img.onload = function() {
      // New Canvas
      var canvas = document.createElement('canvas');
      canvas.width = width;
      canvas.height = height;
      // Draw (Resize)
      var ctx = canvas.getContext('2d');
      ctx.drawImage(img, 0, 0, width, height);
      // Destination Image
      imgB64_dst = canvas.toDataURL(img_type);
      //console.log(imgB64_dst);
      callback(imgB64_dst);
    };

    img.src = imgB64_src;
  }
</script>